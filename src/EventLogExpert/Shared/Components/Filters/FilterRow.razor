@using EventLogExpert.UI

<div class="flex-space-between">
    <div class="flex-align-center">
        @if (Value.IsEditing)
        {
            <ValueSelect CssClass="@($"input color-dropdown {Value.Color.ToString().ToLower()}")" T="HighlightColor" @bind-Value="Value.Color">
                @foreach (HighlightColor item in Enum.GetValues(typeof(HighlightColor)))
                {
                    <ValueSelectItem CssClass="@($"color-dropdown-item {item.ToString().ToLower()}")" T="HighlightColor" Value="item" />
                }
            </ValueSelect>

            <span>Filter On: </span>
            <ValueSelect CssClass="input filter-dropdown" T="FilterType" @bind-Value="Value.Data.Type" ToStringFunc="x => x.ToFullString()">
                @foreach (FilterType item in Enum.GetValues(typeof(FilterType)))
                {
                    <ValueSelectItem T="FilterType" Value="item" />
                }
            </ValueSelect>

            <span>Comparison: </span>
            <ValueSelect CssClass="input filter-dropdown" T="FilterEvaluator" @bind-Value="Value.Data.Evaluator" ToStringFunc="x => x.ToFullString()">
                @foreach (FilterEvaluator item in Enum.GetValues(typeof(FilterEvaluator)))
                {
                    <ValueSelectItem T="FilterEvaluator" Value="item" />
                }
            </ValueSelect>

            <span>Value: </span>
            <div>
                @if (Value.Data.Type is FilterType.Description)
                {
                    <TextInput CssClass="input filter-description" @bind-Value="@Value.Data.Value" />
                }
                else if (Value.Data.Evaluator == FilterEvaluator.MultiSelect)
                {
                    <ValueSelect CssClass="input filter-multiselect-dropdown" T="string" @bind-Values="Value.Data.Values" IsMultiSelect
                        ToStringFunc="@(x => string.IsNullOrWhiteSpace(x) ? "All" : x)">
                        <ValueSelectItem T="string" ClearItem>All</ValueSelectItem>
                        @foreach (var item in Items)
                        {
                            <ValueSelectItem T="string" Value="item" />
                        }
                    </ValueSelect>
                }
                else
                {
                    <ValueSelect CssClass="input filter-value-dropdown" T="string" @bind-Value="Value.Data.Value" IsInput>
                    <ValueSelectItem T="string" ClearItem>All</ValueSelectItem>
                        @foreach (var item in FilteredItems)
                        {
                            <ValueSelectItem T="string" Value="item" />
                        }
                    </ValueSelect>
                }
            </div>
        }
        else if (string.IsNullOrWhiteSpace(Value.Comparison.Value))
        {
            <span>No Filter Specified</span>
        }
        else
        {
            @if (Value.Color != HighlightColor.None)
            {
                <div class="mx-2 @($"color-box {Value.Color.ToString().ToLower()}")"></div>
            }
            <span>@Value.Comparison.Value</span>
        }
     </div>

    <div>
        @if (Value.IsEditing)
        {
            <button class="button" @onclick="AddSubFilter">
                <i class="bi bi-plus-circle"></i> Add Sub Filter
            </button>

            <button class="button button-green" @onclick="SaveFilter">
                <i class="bi bi-check-circle"></i> Save
            </button>

            <button class="button button-red fixed-width" @onclick="RemoveFilter">
                <i class="bi bi-dash-circle"></i> Remove
            </button>
        }
        else
        {
            <button class="button" @onclick="EditFilter">
                <i class="bi bi-funnel"></i> Edit
            </button>

            @if (Value.IsEnabled)
            {
                <button class="button button-red fixed-width" @onclick="ToggleFilter">
                    <i class="bi bi-dash-circle"></i> Disable
                </button>
            }
            else
            {
                <button class="button button-green fixed-width" @onclick="ToggleFilter">
                    <i class="bi bi-plus-circle"></i> Enable
                </button>
            }
        }
    </div>
</div>

@if (Value.SubFilters.Count > 0 && Value.IsEditing)
{
    <div class="flex-column">
        @foreach (var item in Value.SubFilters)
        {
            <SubFilterRow ParentId="Value.Id" Value="@item" />
        }
    </div>
}
