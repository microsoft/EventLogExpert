@inherits FluxorComponent

@inject IState<EventLogState> EventLogState
@inject IState<FilterPaneState> FilterPaneState
@inject IState<StatusBarState> StatusBarState

<div class="status-bar">
    @if (EventLogState.Value.EventsLoading > 0)
    {
        <span>Loading Progress: @EventLogState.Value.EventsLoading</span>
    }
    
    <span>Events Loaded: @EventLogState.Value.ActiveLogs.Values.Sum(log => log.Events.Count)</span>
    
    @if (FilterPaneState.Value.CurrentFilters.Any())
    {
        <span>Filtered Events: @FilterPaneState.Value.NumberOfFilteredEvents</span>
    }

    @if (EventLogState.Value.ActiveLogs.Values.Any(l => l.Type == EventLogExpert.Store.EventLog.EventLogState.LogType.Live))
    {
        @if (EventLogState.Value.ContinuouslyUpdate)
        {
            <span>Continuously Updating</span>
        }
        else
        {
            <span>New Events: @EventLogState.Value.NewEventBuffer.Count</span>
            @if (EventLogState.Value.NewEventBufferIsFull)
            {
                <span>Buffer Full</span>
            }

        }

    }

    @if (!string.IsNullOrEmpty(StatusBarState.Value.ResolverStatus))
    {
        <span>@StatusBarState.Value.ResolverStatus</span>
    }
</div>
