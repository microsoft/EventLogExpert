@using EventLogExpert.UI.Store.EventLog;
@using EventLogExpert.UI.Store.FilterPane;
@using EventLogExpert.UI.Store.StatusBar;
@inherits FluxorComponent

@inject IState<EventLogState> EventLogState
@inject IState<FilterPaneState> FilterPaneState
@inject IState<StatusBarState> StatusBarState

<div class="status-bar">
    @{
        var eventLogState = EventLogState.Value;
        var isAnyFilterApplied = 
            eventLogState.AppliedFilter.AdvancedFilter is not null ||
            eventLogState.AppliedFilter.DateFilter is not null ||
            eventLogState.AppliedFilter.CachedFilters.Any() ||
            eventLogState.AppliedFilter.Filters.Any();
    }

    @foreach (var loadingProgress in eventLogState.EventsLoading)
    {
        <span>Loading: @loadingProgress.Value</span>
    }
    
    <span>Events Loaded: @eventLogState.ActiveLogs.Values.Sum(log => log.Events.Count)</span>
    @if (isAnyFilterApplied)
    {
        var totalEvents = eventLogState.SelectedLogName == null ? eventLogState.ActiveLogs.Values.Sum(l => l.Events.Count) : eventLogState.ActiveLogs[eventLogState.SelectedLogName].Events.Count;
        var filteredEvents = eventLogState.SelectedLogName == null ? eventLogState.CombinedEvents.Count : eventLogState.ActiveLogs[eventLogState.SelectedLogName].FilteredEvents.Count;
        <span>Visible: @(filteredEvents) Hidden by filter: @(totalEvents - filteredEvents)</span>
    }

    @if (EventLogState.Value.ActiveLogs.Values.Any(l => l.Type == EventLogExpert.UI.Store.EventLog.EventLogState.LogType.Live))
    {
        @if (EventLogState.Value.ContinuouslyUpdate)
        {
            <span>Continuously Updating</span>
        }
        else
        {
            <span>New Events: @eventLogState.NewEventBuffer.Count</span>
            @if (eventLogState.NewEventBufferIsFull)
            {
                <span>Buffer Full</span>
            }
        }
    }

    @if (!string.IsNullOrEmpty(StatusBarState.Value.ResolverStatus))
    {
        <span>@StatusBarState.Value.ResolverStatus</span>
    }
</div>
