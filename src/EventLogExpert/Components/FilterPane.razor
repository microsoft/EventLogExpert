@using EventLogExpert.Shared.Components.Filters
@using EventLogExpert.Shared.Components
@using EventLogExpert.UI
@inherits FluxorComponent

<div class="filter-pane">
    <div class="filter-header">
        <div>
            <button class="button" @onclick="AddBasicFilter">
                <i class="bi bi-plus-circle"></i> Add Basic Filter
            </button>

            @if (!IsDateFilterVisible)
            {
                <button class="button" @onclick="AddDateFilter">
                    <i class="bi bi-plus-circle"></i> Add Date Filter
                </button>
            }

            <button class="button" @onclick="AddAdvancedFilter">
                <i class="bi bi-plus-circle"></i> Add Advanced Filter
            </button>

            <button class="button" @onclick="AddCachedFilter">
                <i class="bi bi-plus-circle"></i> Add Cached Filter
            </button>
        </div>

        @if (HasFilters || FilterPaneState.Value.IsLoading)
        {
            @if (FilterPaneState.Value.IsLoading)
            {
                <div class="text-align-center">
                    <span>[<i class="spinner-border" role="status"></i> Applying Filters]</span>
                </div>
            }
            else
            {
                <div class="text-align-center">
                    @if (GetActiveFilters() > 0)
                    {
                        <span>[Active Filters: @GetActiveFilters()]</span>
                    }
                </div>
            }

            <span class="menu-toggle justify-self-right" data-rotate="@MenuState" @onclick="ToggleMenu">
                <i class="bi bi-caret-up"></i>
            </span>
        }
    </div>

    <div class="filter-group" data-toggle="@MenuState">
        @if (IsDateFilterVisible)
        {
            <EditForm id="filter-form" class="flex-row" Model="_model">
                <span>
                    After: <InputDate class="input filter-datetime" Type="InputDateType.DateTimeLocal"
                        @bind-Value="_model.After" disabled="@(!_canEditDate)" />
                </span>
                <span>
                    Before: <InputDate class="input filter-datetime" Type="InputDateType.DateTimeLocal"
                        @bind-Value="_model.Before" disabled="@(!_canEditDate)" />
                </span>

                @if (_canEditDate)
                {
                    <button class="button button-green" @onclick="ApplyDateFilter">
                        <i class="bi bi-check-circle"></i> Apply
                    </button>

                    <button class="button button-red" type="button" @onclick="RemoveDateFilter">
                        <i class="bi bi-dash-circle"></i> Remove
                    </button>
                }
                else
                {
                    <button class="button" @onclick="EditDateFilter">
                        <i class="bi bi-funnel"></i> Edit
                    </button>

                    @if (FilterPaneState.Value.FilteredDateRange?.IsEnabled is true)
                    {
                        <button class="button button-red" @onclick="ToggleDateFilter">
                            <i class="bi bi-dash-circle"></i> Disable
                        </button>
                    }
                    else
                    {
                        <button class="button button-green" @onclick="ToggleDateFilter">
                            <i class="bi bi-plus-circle"></i> Enable
                        </button>
                    }
                }
            </EditForm>
        }

        @foreach (var item in FilterPaneState.Value.BasicFilters)
        {
            <FilterRow Value="item" />
        }

        @foreach (var item in FilterPaneState.Value.AdvancedFilters)
        {
            <AdvancedFilterRow Value="item" />
        }

        @foreach (var item in FilterPaneState.Value.CachedFilters)
        {
            <FilterCacheRow Value="item" />
        }
    </div>
</div>
