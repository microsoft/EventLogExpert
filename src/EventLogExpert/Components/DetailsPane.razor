@using System.Xml.Linq
@inherits FluxorComponent

<div data-toggle="@IsVisible" hidden="@(SelectedEvent is null)" id="details-pane">
    <div id="details-resizer"></div>

    <div class="flex-space-between" id="details-header" @onclick="ToggleMenu">
        <div>Details</div>

        <span class="menu-toggle" data-rotate="@IsVisible">
            <i class="bi bi-caret-up"></i>
        </span>
    </div>

    @if (SelectedEvent is not null)
    {
        <div class="details-group" data-toggle="@_isXmlVisible.ToString().ToLower()">
            <div class="d-flex flex-row">
                <div>Log Name: @SelectedEvent.LogName</div>
                <div>Source: @SelectedEvent.Source</div>
                <div>Event Id: @SelectedEvent.Id</div>
                <div>Level: @SelectedEvent.Level</div>
                @if (SelectedEvent.KeywordsDisplayNames.Any())
                {
                    <div>
                        @SelectedEvent.KeywordsDisplayNames.GetEventKeywords()
                    </div>
                }
                <div>Date and Time: @SelectedEvent.TimeCreated.ConvertTimeZone(SettingsState.Value.Config.TimeZoneInfo)</div>
            </div>

            <div>Description:</div>
            <p class="details-description">@SelectedEvent.Description</p>
        </div>

        <hr />

        <div class="details-row-xml" @onclick="ToggleXml">
            <div>XML</div>
            <div class="justify-self-center">
                <button class="button" @onclick="CopyEvent">Copy Event</button>
            </div>
            <span class="menu-toggle justify-self-right" data-rotate="@_isXmlVisible.ToString().ToLower()">
                <i class="bi bi-caret-up"></i>
            </span>
        </div>

        <p class="details-xml" data-toggle="@_isXmlVisible.ToString().ToLower()">@XElement.Parse(SelectedEvent.Xml)</p>
    }
</div>
